'''
我们把数组A中符合下列属性的任意连续子数组B称为 “山脉”：

B.length >= 3
存在0 < i < B.length - 1
使得B[0] < B[1] < ...B[i - 1] < B[i] > B[i + 1] > ... > B[B.length - 1]
（注意：B可以是A的任意子数组，包括整个数组A。）

给出一个整数数组A，返回最长 “山脉” 的长度。

如果不含有 “山脉” 则返回0。



示例1：

输入：[2, 1, 4, 7, 3, 2, 5]
输出：5
解释：最长的 “山脉” 是[1, 4, 7, 3, 2]，长度为5。

示例2：
输入：[2, 2, 2]
输出：0
解释：不含 “山脉”。

提示：

0 <= A.length <= 10000
0 <= A[i] <= 10000
'''

class Solution:
    def longestMountain(self, A: List[int]) -> int:
























